{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { API_ENDPOINT } from \"../utils/constants\";\nimport { Button } from '@rneui/themed';\nimport axios from 'axios';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { _storeData, _retrieveData } from \"../utils/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\nvar getSpotifyCredentials = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var res = yield axios.get(API_ENDPOINT + '/api/spotify-credentials');\n    var spotifyCredentials = res.data;\n    return spotifyCredentials;\n  });\n  return function getSpotifyCredentials() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getTokens = function () {\n  var _ref2 = _asyncToGenerator(function* (credentials, authorizationCode) {\n    var credsB64 = btoa(credentials.clientId + \":\" + credentials.clientSecret);\n    var response = yield fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: \"Basic \" + credsB64,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: \"grant_type=authorization_code&code=\" + authorizationCode + \"&redirect_uri=\" + credentials.redirectUri\n    });\n    console.log(\"HI2\");\n    var responseJson = response.json();\n    return responseJson;\n  });\n  return function getTokens(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport default function LoginScreen(props) {\n  var _useAuthRequest = useAuthRequest({\n      clientId: '2032e93e5d6b4466a81a2fd6152cd0a6',\n      scopes: ['user-modify-playback-state', 'user-read-currently-playing', 'user-read-playback-state', 'user-library-modify', 'user-library-read', 'playlist-read-private', 'playlist-read-collaborative', 'playlist-modify-public', 'playlist-modify-private', 'user-read-recently-played', 'user-top-read', 'user-read-private', 'user-read-email', 'streaming'],\n      usePKCE: false,\n      redirectUri: \"http://127.0.0.1:19006\"\n    }, discovery),\n    _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n    request = _useAuthRequest2[0],\n    response = _useAuthRequest2[1],\n    promptAsync = _useAuthRequest2[2];\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var code = response.params.code;\n      try {\n        getSpotifyCredentials().then(function (credentials) {\n          getTokens(credentials, code).then(function (responseJson) {\n            var accessToken = responseJson.access_token,\n              refreshToken = responseJson.refresh_token,\n              expiresIn = responseJson.expires_in;\n            var expirationTime = new Date().getTime() + expiresIn * 1000;\n            console.log(\"RESSSS\");\n            console.log(responseJson);\n            _storeData('accessToken', accessToken);\n            _storeData('refreshToken', refreshToken);\n            _storeData('expirationTime', expirationTime);\n            props.setAccessToken(accessToken);\n            props.setRefreshToken(refreshToken);\n            props.setExpirationTime(expirationTime);\n            getUserInfo(accessTokenTemp).then(function (userInfo) {\n              getRcastUserInfo(userInfo).then(function (rcastUserInfoRes) {\n                console.log(\"RESSSS\");\n                console.log(rcastUserInfoRes);\n                _storeData('rcastUserInfo', JSON.stringify(rcastUserInfoRes.data.user));\n                _storeData('rcastToken', rcastUserInfoRes.data.rcastToken);\n                props.setRcastUserInfo(rcastUserInfoRes.data.user);\n                props.setRcastToken(rcastUserInfoRes.data.rcastToken);\n                props.setLoading(false);\n              });\n            });\n          });\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [response]);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Button, {\n      title: \"Log In\",\n      onPress: function onPress() {\n        promptAsync();\n      },\n      type: \"outline\"\n    })\n  });\n}","map":{"version":3,"names":["React","API_ENDPOINT","Button","axios","WebBrowser","makeRedirectUri","useAuthRequest","_storeData","_retrieveData","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","getSpotifyCredentials","res","get","spotifyCredentials","data","getTokens","credentials","authorizationCode","credsB64","btoa","clientId","clientSecret","response","fetch","method","headers","Authorization","body","redirectUri","console","log","responseJson","json","LoginScreen","props","scopes","usePKCE","request","promptAsync","useEffect","type","code","params","then","accessToken","access_token","refreshToken","refresh_token","expiresIn","expires_in","expirationTime","Date","getTime","setAccessToken","setRefreshToken","setExpirationTime","getUserInfo","accessTokenTemp","userInfo","getRcastUserInfo","rcastUserInfoRes","JSON","stringify","user","rcastToken","setRcastUserInfo","setRcastToken","setLoading","err","error","flex","alignItems","justifyContent"],"sources":["/Users/paulgaudin/Desktop/r_cast/rcast_frontend/src/screens/loginScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text } from \"react-native\";\nimport { API_ENDPOINT } from \"../utils/constants\"\nimport { Button } from '@rneui/themed';\n\nimport axios from 'axios'\n\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\n\nimport {_storeData, _retrieveData} from \"../utils/storage\"\n\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst discovery = {\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    tokenEndpoint: 'https://accounts.spotify.com/api/token',\n  };\n  \n  const getSpotifyCredentials = async () => {\n    const res = await axios.get(API_ENDPOINT + '/api/spotify-credentials')\n    const spotifyCredentials = res.data\n    return spotifyCredentials\n  }\n\n\nconst getTokens = async (credentials, authorizationCode) => {\n    const credsB64 = btoa(`${credentials.clientId}:${credentials.clientSecret}`);\n\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${credsB64}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${\n        credentials.redirectUri\n      }`,\n    });\n    console.log(\"HI2\")\n    const responseJson =  response.json();\n    return responseJson\n}\n\nexport default function LoginScreen(props) {\n\n\n    \n\nconst [request, response, promptAsync] = useAuthRequest(\n    {\n        clientId: '2032e93e5d6b4466a81a2fd6152cd0a6',\n        scopes: [\n            'user-modify-playback-state','user-read-currently-playing','user-read-playback-state','user-library-modify',\n            'user-library-read','playlist-read-private','playlist-read-collaborative','playlist-modify-public',\n            'playlist-modify-private','user-read-recently-played','user-top-read', 'user-read-private', 'user-read-email','streaming'\n    ],\n        // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n        // this must be set to false\n        usePKCE: false,\n        redirectUri: \"http://127.0.0.1:19006\"\n    },\n    discovery\n    );\n\n  React.useEffect(() => {\n    if (response?.type === 'success') {\n      const { code } = response.params;\n    //   console.log(\"CODE\")\n    //   console.log(code)\n\n    try {\n        getSpotifyCredentials().then(credentials => {\n            getTokens(credentials, code).then(responseJson => {\n                const {\n                    access_token: accessToken,\n                    refresh_token: refreshToken,\n                    expires_in: expiresIn,\n                    } = responseJson;\n                \n                    const expirationTime = new Date().getTime() + expiresIn * 1000;\n                    console.log(\"RESSSS\")\n                    console.log(responseJson)\n                    _storeData('accessToken', accessToken);\n                    _storeData('refreshToken', refreshToken);\n                    _storeData('expirationTime', expirationTime);\n                    props.setAccessToken(accessToken)\n                    props.setRefreshToken(refreshToken)\n                    props.setExpirationTime(expirationTime)\n                    getUserInfo(accessTokenTemp).then(userInfo => {\n                        getRcastUserInfo(userInfo).then(rcastUserInfoRes => {\n                            console.log(\"RESSSS\")\n                            console.log(rcastUserInfoRes)\n                            _storeData('rcastUserInfo', JSON.stringify(rcastUserInfoRes.data.user))\n                            _storeData('rcastToken', rcastUserInfoRes.data.rcastToken)\n                            props.setRcastUserInfo(rcastUserInfoRes.data.user)\n                            props.setRcastToken(rcastUserInfoRes.data.rcastToken)\n                            props.setLoading(false)\n                        })\n                    })\n\n            })\n        })\n\n    } catch (err) {\n        console.error(err);\n    }\n    }\n  }, [response]);\n\n\n\n\n\n   return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\n        <Button\n        title=\"Log In\"\n        onPress={() => {\n            promptAsync();\n        }}\n        type=\"outline\"\n        /> \n\n                \n</View>\n   );\n }"],"mappings":"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"},"metadata":{},"sourceType":"module"}