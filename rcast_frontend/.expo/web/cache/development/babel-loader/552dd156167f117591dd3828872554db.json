{"ast":null,"code":"import * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { DrawerItems } from \"../utils/drawerItems\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport UserFeed from \"../screens/userFeed\";\nimport UserShares from \"../screens/userShares\";\nimport ProfileScreen from \"../screens/profileScreen\";\nimport AddFriend from \"../screens/addFriend\";\nimport FriendScreen from \"../screens/friendsScreen\";\nimport { Entypo } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar BottomTabNavigator = function BottomTabNavigator(props) {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Feed') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Shares') {\n            iconName = focused ? 'ios-list' : 'ios-list-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Feed\",\n      component: function component() {\n        return _jsx(UserFeed, {\n          rcastUserInfo: props.rcastUserInfo\n        });\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Shares\",\n      component: UserShares\n    })]\n  });\n};\nvar Drawer = createDrawerNavigator();\nvar DrawerNavigator = function DrawerNavigator(props) {\n  return _jsxs(Drawer.Navigator, {\n    initialRouteName: \"RCast\",\n    children: [_jsx(Drawer.Screen, {\n      name: \"RCast\",\n      component: function component() {\n        return _jsx(BottomTabNavigator, {\n          rcastUserInfo: props.rcastUserInfo\n        });\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: function component() {\n        return _jsx(ProfileScreen, {\n          logOutUser: props.logOutUser\n        });\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Friends\",\n      component: FriendScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Add Friend\",\n      component: AddFriend\n    })]\n  });\n};\nexport default function UserNavigation(props) {\n  return _jsx(_Fragment, {\n    children: _jsx(DrawerNavigator, {\n      logOutUser: props.logOutUser,\n      rcastUserInfo: props.rcastUserInfo\n    })\n  });\n}","map":{"version":3,"names":["React","Ionicons","createDrawerNavigator","DrawerItems","MaterialCommunityIcons","Feather","FontAwesome5","UserFeed","UserShares","ProfileScreen","AddFriend","FriendScreen","Entypo","useNavigation","createBottomTabNavigator","createStackNavigator","Stack","Tab","BottomTabNavigator","props","route","headerShown","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","rcastUserInfo","Drawer","DrawerNavigator","logOutUser","UserNavigation"],"sources":["/Users/paulgaudin/Desktop/r_cast/rcast_frontend/src/components/userNavigation.js"],"sourcesContent":["\nimport * as React from 'react';\n\nimport { Button, View, Text, StyleSheet, TouchableOpacity } from 'react-native';\n\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n\n\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport { DrawerItems } from \"../utils/drawerItems\"\n\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport UserFeed from \"../screens/userFeed\"\nimport UserShares from \"../screens/userShares\"\nimport ProfileScreen from '../screens/profileScreen';\nimport AddFriend from '../screens/addFriend';\nimport FriendScreen from '../screens/friendsScreen';\n\nimport { Entypo } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack'\n\n\nconst Stack = createStackNavigator();\n// https://dev.to/easybuoy/combining-stack-tab-drawer-navigations-in-react-native-with-react-navigation-5-da\n  \n\n// const MainStackNavigator = () => {\n//     return (\n//       <Stack.Navigator\n//       screenOptions={{\n//         headerStyle: {\n//           backgroundColor: \"#9AC4F8\",\n//         },\n//         headerTintColor: \"white\",\n//         headerBackTitle: \"Back\",\n//       }}   \n//        >\n//         <Stack.Screen name=\"Home\" component={UserFeed} />\n//         <Stack.Screen name=\"About\" component={UserShares} />\n//       </Stack.Navigator>\n//     );\n//   }\n  \n//   const ContactStackNavigator = () => {\n//     return (\n//       <Stack.Navigator screenOptions={screenOptionStyle}>\n//         <Stack.Screen name=\"Contact\" component={Contact} />\n//       </Stack.Navigator>\n//     );\n//   }\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabNavigator = (props) => {\n  return (\n    <Tab.Navigator \n        screenOptions={({ route }) => ({ \n            headerShown: false ,\n            tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n                if (route.name === 'Feed') {\n                  iconName = focused\n                    ? 'ios-information-circle'\n                    : 'ios-information-circle-outline';\n                } else if (route.name === 'Shares') {\n                  iconName = focused ? 'ios-list' : 'ios-list-outline';\n                }\n    \n                // You can return any component that you like here!\n                return <Ionicons name={iconName} size={size} color={color} />;\n              },\n              tabBarActiveTintColor: 'tomato',\n              tabBarInactiveTintColor: 'gray',\n        })}>\n      <Tab.Screen \n        name=\"Feed\" \n        component={() => <UserFeed rcastUserInfo={props.rcastUserInfo}/>}\n      />\n      <Tab.Screen name=\"Shares\" component={UserShares} />\n    </Tab.Navigator>\n  );\n};\n\n\nconst Drawer = createDrawerNavigator();\n\n\n\nconst DrawerNavigator = (props) => {\n    return (\n      <Drawer.Navigator initialRouteName=\"RCast\">\n        <Drawer.Screen name=\"RCast\"\n        component={() => <BottomTabNavigator rcastUserInfo={props.rcastUserInfo}\n        />}/>\n        <Drawer.Screen name=\"Profile\" \n        component={() => <ProfileScreen logOutUser={props.logOutUser}/>}\n        />\n        <Drawer.Screen name=\"Friends\" component={FriendScreen} />\n        <Drawer.Screen name=\"Add Friend\" component={AddFriend} />\n      </Drawer.Navigator>\n    );\n  }\n\n\n\nexport default function UserNavigation(props) {\n\n\n    return (\n\n        <>\n          <DrawerNavigator \n            logOutUser={props.logOutUser}\n            rcastUserInfo={props.rcastUserInfo}\n          />\n        </>\n\n\n\n\n\n    );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}