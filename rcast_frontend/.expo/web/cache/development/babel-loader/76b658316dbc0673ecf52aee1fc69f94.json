{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from '@rneui/themed';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\nexport default function LoginScreen() {\n  var getTokens = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        console.log(\"Um\");\n        var authorizationCode = yield getAuthorizationCode();\n        var credentials = yield getSpotifyCredentials();\n        var credsB64 = btoa(credentials.clientId + \":\" + credentials.clientSecret);\n        console.log(\"HI\");\n        var _response = yield fetch('https://accounts.spotify.com/api/token', {\n          method: 'POST',\n          headers: {\n            Authorization: \"Basic \" + credsB64,\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: \"grant_type=authorization_code&code=\" + authorizationCode + \"&redirect_uri=\" + credentials.redirectUri\n        });\n        console.log(\"HI2\");\n        var responseJson = yield _response.json();\n        var accessToken = responseJson.access_token,\n          refreshToken = responseJson.refresh_token,\n          expiresIn = responseJson.expires_in;\n        var expirationTime = new Date().getTime() + expiresIn * 1000;\n        console.log(\"RESSSS\");\n        console.log(responseJson);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return function getTokens() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var _useAuthRequest = useAuthRequest({\n      clientId: '2032e93e5d6b4466a81a2fd6152cd0a6',\n      scopes: ['user-read-email', 'playlist-modify-public'],\n      usePKCE: false,\n      redirectUri: \"http://127.0.0.1:19006\"\n    }, discovery),\n    _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n    request = _useAuthRequest2[0],\n    response = _useAuthRequest2[1],\n    promptAsync = _useAuthRequest2[2];\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var code = response.params.code;\n      console.log(\"CODE\");\n      console.log(code);\n    }\n  }, [response]);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Button, {\n      title: \"Log In\",\n      onPress: function onPress() {\n        promptAsync();\n      },\n      type: \"outline\"\n    })\n  });\n}","map":{"version":3,"names":["React","Button","WebBrowser","makeRedirectUri","useAuthRequest","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","LoginScreen","getTokens","console","log","authorizationCode","getAuthorizationCode","credentials","getSpotifyCredentials","credsB64","btoa","clientId","clientSecret","response","fetch","method","headers","Authorization","body","redirectUri","responseJson","json","accessToken","access_token","refreshToken","refresh_token","expiresIn","expires_in","expirationTime","Date","getTime","err","error","scopes","usePKCE","request","promptAsync","useEffect","type","code","params","flex","alignItems","justifyContent"],"sources":["/Users/paulgaudin/Desktop/r_cast/rcast_frontend/src/screens/loginScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text } from \"react-native\";\n\nimport { Button } from '@rneui/themed';\n\n\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\n\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst discovery = {\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    tokenEndpoint: 'https://accounts.spotify.com/api/token',\n  };\n  \n\n\n\nexport default function LoginScreen() {\n\n    \n    const getTokens = async () => {\n        try {\n          console.log(\"Um\")\n          const authorizationCode = await getAuthorizationCode() //we wrote this function above\n          const credentials = await getSpotifyCredentials() //we wrote this function above (could also run this outside of the functions and store the credentials in local scope)\n          const credsB64 = btoa(`${credentials.clientId}:${credentials.clientSecret}`);\n          console.log(\"HI\")\n          const response = await fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            headers: {\n              Authorization: `Basic ${credsB64}`,\n              'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${\n              credentials.redirectUri\n            }`,\n          });\n          console.log(\"HI2\")\n          const responseJson = await response.json();\n          // destructure the response and rename the properties to be in camelCase to satisfy my linter ;)\n          const {\n            access_token: accessToken,\n            refresh_token: refreshToken,\n            expires_in: expiresIn,\n          } = responseJson;\n      \n          const expirationTime = new Date().getTime() + expiresIn * 1000;\n          console.log(\"RESSSS\")\n          console.log(responseJson)\n        //   await setUserData('accessToken', accessToken);\n        //   await setUserData('refreshToken', refreshToken);\n        //   await setUserData('expirationTime', expirationTime);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    \n\nconst [request, response, promptAsync] = useAuthRequest(\n    {\n        clientId: '2032e93e5d6b4466a81a2fd6152cd0a6',\n        scopes: ['user-read-email', 'playlist-modify-public'],\n        // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n        // this must be set to false\n        usePKCE: false,\n        redirectUri: \"http://127.0.0.1:19006\"\n    },\n    discovery\n    );\n\n  React.useEffect(() => {\n    if (response?.type === 'success') {\n      const { code } = response.params;\n      console.log(\"CODE\")\n      console.log(code)\n\n    }\n  }, [response]);\n\n\n\n\n\n   return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\n        <Button\n        title=\"Log In\"\n        onPress={() => {\n            promptAsync();\n        }}\n        type=\"outline\"\n        /> \n\n                \n</View>\n   );\n }"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAG/B,SAASC,MAAM,QAAQ,eAAe;AAGtC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,SAASC,eAAe,EAAEC,cAAc,QAAQ,mBAAmB;AAAC;AAGpEF,UAAU,CAACG,wBAAwB,EAAE;AAErC,IAAMC,SAAS,GAAG;EACdC,qBAAqB,EAAE,wCAAwC;EAC/DC,aAAa,EAAE;AACjB,CAAC;AAKH,eAAe,SAASC,WAAW,GAAG;EAGlC,IAAMC,SAAS;IAAA,6BAAG,aAAY;MAC1B,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAMC,iBAAiB,SAASC,oBAAoB,EAAE;QACtD,IAAMC,WAAW,SAASC,qBAAqB,EAAE;QACjD,IAAMC,QAAQ,GAAGC,IAAI,CAAIH,WAAW,CAACI,QAAQ,SAAIJ,WAAW,CAACK,YAAY,CAAG;QAC5ET,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAMS,SAAQ,SAASC,KAAK,CAAC,wCAAwC,EAAE;UACrEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPC,aAAa,aAAWR,QAAU;YAClC,cAAc,EAAE;UAClB,CAAC;UACDS,IAAI,0CAAwCb,iBAAiB,sBAC3DE,WAAW,CAACY;QAEhB,CAAC,CAAC;QACFhB,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAMgB,YAAY,SAASP,SAAQ,CAACQ,IAAI,EAAE;QAE1C,IACgBC,WAAW,GAGvBF,YAAY,CAHdG,YAAY;UACGC,YAAY,GAEzBJ,YAAY,CAFdK,aAAa;UACDC,SAAS,GACnBN,YAAY,CADdO,UAAU;QAGZ,IAAMC,cAAc,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGJ,SAAS,GAAG,IAAI;QAC9DvB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACrBD,OAAO,CAACC,GAAG,CAACgB,YAAY,CAAC;MAI3B,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZ5B,OAAO,CAAC6B,KAAK,CAACD,GAAG,CAAC;MACpB;IACF,CAAC;IAAA,gBAnCG7B,SAAS;MAAA;IAAA;EAAA,GAmCZ;EAGP,sBAAyCN,cAAc,CACnD;MACIe,QAAQ,EAAE,kCAAkC;MAC5CsB,MAAM,EAAE,CAAC,iBAAiB,EAAE,wBAAwB,CAAC;MAGrDC,OAAO,EAAE,KAAK;MACdf,WAAW,EAAE;IACjB,CAAC,EACDrB,SAAS,CACR;IAAA;IAVEqC,OAAO;IAAEtB,QAAQ;IAAEuB,WAAW;EAYnC5C,KAAK,CAAC6C,SAAS,CAAC,YAAM;IACpB,IAAI,CAAAxB,QAAQ,oBAARA,QAAQ,CAAEyB,IAAI,MAAK,SAAS,EAAE;MAChC,IAAQC,IAAI,GAAK1B,QAAQ,CAAC2B,MAAM,CAAxBD,IAAI;MACZpC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACmC,IAAI,CAAC;IAEnB;EACF,CAAC,EAAE,CAAC1B,QAAQ,CAAC,CAAC;EAMb,OACC,KAAC,IAAI;IAAC,KAAK,EAAE;MAAE4B,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA,UAErE,KAAC,MAAM;MACP,KAAK,EAAC,QAAQ;MACd,OAAO,EAAE,mBAAM;QACXP,WAAW,EAAE;MACjB,CAAE;MACF,IAAI,EAAC;IAAS;EACZ,EAGH;AAEN"},"metadata":{},"sourceType":"module"}