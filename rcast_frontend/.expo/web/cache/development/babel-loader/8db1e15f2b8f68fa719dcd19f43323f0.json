{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { _storeData, _retrieveData } from \"../utils/storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as React from 'react';\nimport { API_ENDPOINT } from \"../utils/constants\";\nimport axios from 'axios';\nimport UserNavigation from \"./userNavigation\";\nimport GuestNavigation from \"./guestNavigation\";\nimport { Button } from '@rneui/themed';\nimport { NavigationContainer } from '@react-navigation/native';\nimport getRcastUserInfo from \"../API/getRcastUserInfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getSpotifyCredentials = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var res = yield axios.get(API_ENDPOINT + '/api/spotify-credentials');\n    var spotifyCredentials = res.data;\n    return spotifyCredentials;\n  });\n  return function getSpotifyCredentials() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar refreshTokens = function () {\n  var _ref2 = _asyncToGenerator(function* (credentials, refreshToken) {\n    var credsB64 = btoa(credentials.clientId + \":\" + credentials.clientSecret);\n    var response = yield fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: \"Basic \" + credsB64,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: \"grant_type=refresh_token&refresh_token=\" + refreshToken\n    });\n    var responseJson = response.json();\n    return responseJson;\n  });\n  return function refreshTokens(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar getUserInfo = function () {\n  var _ref3 = _asyncToGenerator(function* (token) {\n    var response = yield fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        Authorization: \"Bearer \" + token,\n        'Content-Type': 'application/json'\n      }\n    });\n    var responseJson = response.json();\n    return responseJson;\n  });\n  return function getUserInfo(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport default function Main() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    accessToken = _React$useState2[0],\n    setAccessToken = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    refreshToken = _React$useState4[0],\n    setRefreshToken = _React$useState4[1];\n  var _React$useState5 = React.useState(0),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    expirationTime = _React$useState6[0],\n    setExpirationTime = _React$useState6[1];\n  var _React$useState7 = React.useState({}),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    rcastUserInfo = _React$useState8[0],\n    setRcastUserInfo = _React$useState8[1];\n  var _React$useState9 = React.useState(''),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    rcastToken = _React$useState10[0],\n    setRcastToken = _React$useState10[1];\n  var _React$useState11 = React.useState(true),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    loading = _React$useState12[0],\n    setLoading = _React$useState12[1];\n  function isExpired(expTime) {\n    if (new Date().getTime() > expTime) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  var tokenRefreshWorkflow = function tokenRefreshWorkflow() {\n    try {\n      var accessTokenTemp = '';\n      var refreshTokenTemp = '';\n      var expirationTimeTemp = '';\n      _retrieveData('accessToken').then(function (aToken) {\n        accessTokenTemp = aToken;\n        _retrieveData('refreshToken').then(function (rToken) {\n          refreshTokenTemp = rToken;\n          _retrieveData('expirationTime').then(function (eTime) {\n            expirationTimeTemp = eTime;\n            console.log(\"hi?\");\n            if (accessTokenTemp !== undefined && refreshTokenTemp !== undefined && expirationTimeTemp !== undefined && accessTokenTemp !== \"undefined\" && refreshTokenTemp !== \"undefined\") {\n              if (accessTokenTemp.length > 0 && refreshTokenTemp.length > 0) {\n                if (isExpired(expirationTimeTemp)) {\n                  getSpotifyCredentials().then(function (credentials) {\n                    console.log(\"REF\");\n                    console.log(refreshTokenTemp);\n                    refreshTokens(credentials, refreshTokenTemp).then(function (responseJson) {\n                      console.log(\"Response JSON\");\n                      console.log(responseJson);\n                      if (Object.keys(responseJson).includes(\"expires_in\")) {\n                        if (responseJson[\"expires_in\"]) {\n                          var accessTokenNew = responseJson.access_token,\n                            refreshTokenNew = responseJson.refresh_token,\n                            expiresInNew = responseJson.expires_in;\n                          var expirationTimeNew = new Date().getTime() + expiresInNew * 1000;\n                          _storeData('accessToken', accessTokenNew);\n                          _storeData('refreshToken', refreshTokenNew);\n                          _storeData('expirationTime', expirationTimeNew);\n                          setAccessToken(accessTokenTemp);\n                          setRefreshToken(refreshTokenTemp);\n                          setExpirationTime(expirationTimeTemp);\n                          console.log(\"loading?\");\n                          getUserInfo(accessTokenTemp).then(function (userInfo) {\n                            console.log(\"UI RES\");\n                            console.log(userInfo);\n                            getRcastUserInfo(userInfo).then(function (rcastUserInfoRes) {\n                              _storeData('rcastUserInfo', JSON.stringify(rcastUserInfoRes.data.user));\n                              _storeData('rcastToken', rcastUserInfoRes.data.rcastToken);\n                              setRcastUserInfo(rcastUserInfoRes.data.user);\n                              setRcastToken(rcastUserInfoRes.data.rcastToken);\n                              setLoading(false);\n                            });\n                          });\n                          return true;\n                        }\n                      } else {\n                        setLoading(false);\n                      }\n                    });\n                  });\n                } else {\n                  getUserInfo(accessTokenTemp).then(function (userInfo) {\n                    getRcastUserInfo(userInfo).then(function (rcastUserInfoRes) {\n                      console.log(\"RESSSS\");\n                      console.log(rcastUserInfoRes);\n                      _storeData('rcastUserInfo', JSON.stringify(rcastUserInfoRes.data.user));\n                      _storeData('rcastToken', rcastUserInfoRes.data.rcastToken);\n                      setRcastUserInfo(rcastUserInfoRes.data.user);\n                      setRcastToken(rcastUserInfoRes.data.rcastToken);\n                      setLoading(false);\n                    });\n                  });\n                  if (accessTokenTemp !== accessToken) {\n                    setAccessToken(accessTokenTemp);\n                  }\n                  if (refreshToken !== refreshTokenTemp) {\n                    setRefreshToken(refreshTokenTemp);\n                  }\n                  if (expirationTime !== expirationTimeTemp) {\n                    setExpirationTime(expirationTimeTemp);\n                  }\n                  setLoading(false);\n                  console.log(\"loading?\");\n                  return true;\n                }\n              } else {\n                setLoading(false);\n              }\n            } else {\n              setLoading(false);\n            }\n          });\n        });\n      });\n    } catch (err) {\n      setLoading(false);\n      return false;\n    }\n  };\n  React.useEffect(function () {\n    console.log(\"MAIN USE EFFECT BEING CALLED\");\n    tokenRefreshWorkflow();\n  }, []);\n  var logOutUser = function logOutUser() {\n    _storeData('accessToken', '');\n    _storeData('refreshToken', '');\n    _storeData('expirationTime', '');\n    _storeData('rcastUserInfo', '');\n    _storeData('rcastToken', '');\n    setRcastUserInfo({});\n    setAccessToken('');\n    setRefreshToken('');\n    setExpirationTime(0);\n    setRcastToken('');\n  };\n  return _jsxs(NavigationContainer, {\n    children: [accessToken && refreshToken && expirationTime && !loading && _jsx(UserNavigation, {\n      logOutUser: logOutUser\n    }), !accessToken && isExpired(expirationTime) && !loading && _jsx(GuestNavigation, {\n      setAccessToken: setAccessToken,\n      setRefreshToken: setRefreshToken,\n      setExpirationTime: setExpirationTime,\n      setRcastUserInfo: setRcastUserInfo,\n      setRcastToken: setRcastToken,\n      setLoading: setLoading,\n      rcastUserInfo: rcastUserInfo\n    }), loading && _jsx(View, {\n      children: _jsx(\"h1\", {\n        children: \"Loading.....\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["_storeData","_retrieveData","React","API_ENDPOINT","axios","UserNavigation","GuestNavigation","Button","NavigationContainer","getRcastUserInfo","getSpotifyCredentials","res","get","spotifyCredentials","data","refreshTokens","credentials","refreshToken","credsB64","btoa","clientId","clientSecret","response","fetch","method","headers","Authorization","body","responseJson","json","getUserInfo","token","Main","useState","accessToken","setAccessToken","setRefreshToken","expirationTime","setExpirationTime","rcastUserInfo","setRcastUserInfo","rcastToken","setRcastToken","loading","setLoading","isExpired","expTime","Date","getTime","tokenRefreshWorkflow","accessTokenTemp","refreshTokenTemp","expirationTimeTemp","then","aToken","rToken","eTime","console","log","undefined","length","Object","keys","includes","accessTokenNew","access_token","refreshTokenNew","refresh_token","expiresInNew","expires_in","expirationTimeNew","userInfo","rcastUserInfoRes","JSON","stringify","user","err","useEffect","logOutUser"],"sources":["/Users/paulgaudin/Desktop/r_cast/rcast_frontend/src/components/main.js"],"sourcesContent":["import { _storeData, _retrieveData } from \"../utils/storage\"\nimport { View } from 'react-native';\nimport * as React from 'react';\nimport { API_ENDPOINT } from \"../utils/constants\"\nimport axios from 'axios'\nimport UserNavigation from \"./userNavigation\";\n\nimport GuestNavigation from \"./guestNavigation\";\n\nimport { Button } from '@rneui/themed';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport getRcastUserInfo from \"../API/getRcastUserInfo\";\n\n\n\n\nconst getSpotifyCredentials = async () => {\n    const res = await axios.get(API_ENDPOINT + '/api/spotify-credentials')\n    const spotifyCredentials = res.data\n    return spotifyCredentials\n}\n\n\nconst refreshTokens = async (credentials, refreshToken) => {\n    const credsB64 = btoa(`${credentials.clientId}:${credentials.clientSecret}`);\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n            Authorization: `Basic ${credsB64}`,\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\n    });\n    const responseJson = response.json();\n    return responseJson\n}\n\n\nconst getUserInfo = async (token) => {\n    const response = await fetch('https://api.spotify.com/v1/me', {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n        }\n    });\n    const responseJson = response.json();\n    return responseJson\n}\n\nexport default function Main() {\n\n\n\n\n    const [accessToken, setAccessToken] = React.useState('')\n    const [refreshToken, setRefreshToken] = React.useState('')\n    const [expirationTime, setExpirationTime] = React.useState(0)\n    const [rcastUserInfo, setRcastUserInfo] = React.useState({})\n    const [rcastToken, setRcastToken] = React.useState('')\n    const [loading, setLoading] = React.useState(true)\n\n\n    function isExpired(expTime) {\n        if (new Date().getTime() > expTime) {\n            return true\n        } else {\n            return false\n        }\n\n    }\n\n\n    const tokenRefreshWorkflow = () => {\n\n        try {\n            var accessTokenTemp = '';\n            var refreshTokenTemp = '';\n            var expirationTimeTemp = '';\n\n\n\n            // var rcastUserInfoTemp = {}\n            // var rcastTokenTemp = ''\n            // _retrieveData('rcastToken').then(aToken => {\n            //     _retrieveData('rcastUserInfo').then(rInfo => {\n            //         if(rInfo !== undefined && (rInfo !== \"undefined\")){\n            //             rcastUserInfoTemp = JSON.parse()\n            //         }\n                    \n            //     })\n            // })\n\n            _retrieveData('accessToken').then(aToken => {\n                accessTokenTemp = aToken\n                _retrieveData('refreshToken').then(rToken => {\n                    refreshTokenTemp = rToken\n                    _retrieveData('expirationTime').then(eTime => {\n                        expirationTimeTemp = eTime\n                        console.log(\"hi?\")\n                        if ((accessTokenTemp !== undefined) && (refreshTokenTemp !== undefined) && (expirationTimeTemp !== undefined) \n                         && (accessTokenTemp !== \"undefined\") && (refreshTokenTemp !== \"undefined\")\n                            ) {\n                            if(accessTokenTemp.length > 0 && refreshTokenTemp.length > 0){\n                                if (isExpired(expirationTimeTemp)) {\n                                    /// REFRESH TOKENS\n                                    getSpotifyCredentials().then(credentials => {\n                                        console.log(\"REF\")\n                                        console.log(refreshTokenTemp)\n                                        refreshTokens(credentials, refreshTokenTemp).then(responseJson => {\n                                            console.log(\"Response JSON\")\n                                            console.log(responseJson)\n                                            if (Object.keys(responseJson).includes(\"expires_in\")) {\n                                                if (responseJson[\"expires_in\"]) {\n                                                    const {\n                                                        access_token: accessTokenNew,\n                                                        refresh_token: refreshTokenNew,\n                                                        expires_in: expiresInNew,\n                                                    } = responseJson;\n                                                    const expirationTimeNew = new Date().getTime() + expiresInNew * 1000;\n                                                    _storeData('accessToken', accessTokenNew);\n                                                    _storeData('refreshToken', refreshTokenNew);\n                                                    _storeData('expirationTime', expirationTimeNew);\n                                                    setAccessToken(accessTokenTemp)\n                                                    setRefreshToken(refreshTokenTemp)\n                                                    setExpirationTime(expirationTimeTemp)\n\n                                                    console.log(\"loading?\")\n                                                    getUserInfo(accessTokenTemp).then(userInfo => {\n                                                        console.log(\"UI RES\")\n                                                        console.log(userInfo)\n                                                        getRcastUserInfo(userInfo).then(rcastUserInfoRes => {\n                                                            _storeData('rcastUserInfo', JSON.stringify(rcastUserInfoRes.data.user))\n                                                            _storeData('rcastToken', rcastUserInfoRes.data.rcastToken)\n                                                            setRcastUserInfo(rcastUserInfoRes.data.user)\n                                                            setRcastToken(rcastUserInfoRes.data.rcastToken)\n                                                            setLoading(false)\n                                                        })\n                                                    })\n                                                    //  user workflow here \n                                                    return true\n                                                }\n                                            } else {\n                                                setLoading(false)\n                                            }\n    \n    \n                                        })\n                                    })\n    \n                                } else {\n                                    // user workflow here \n                                    getUserInfo(accessTokenTemp).then(userInfo => {\n                                        getRcastUserInfo(userInfo).then(rcastUserInfoRes => {\n                                            console.log(\"RESSSS\")\n                                            console.log(rcastUserInfoRes)\n                                            _storeData('rcastUserInfo', JSON.stringify(rcastUserInfoRes.data.user))\n                                            _storeData('rcastToken', rcastUserInfoRes.data.rcastToken)\n                                            setRcastUserInfo(rcastUserInfoRes.data.user)\n                                            setRcastToken(rcastUserInfoRes.data.rcastToken)\n                                            setLoading(false)\n                                        })\n                                    })\n                                    if (accessTokenTemp !== accessToken) {\n                                        setAccessToken(accessTokenTemp)\n                                    }\n                                    if (refreshToken !== refreshTokenTemp) {\n                                        setRefreshToken(refreshTokenTemp)\n                                    }\n                                    if (expirationTime !== expirationTimeTemp) {\n                                        setExpirationTime(expirationTimeTemp)\n                                    }\n                                    setLoading(false)\n                                    console.log(\"loading?\")\n                                    return true\n                                }\n                            }else{\n                                setLoading(false)\n                            }\n\n\n\n                        } else {\n                            setLoading(false)\n                        }\n\n                    })\n                });\n            });\n        } catch (err) {\n            setLoading(false)\n            return false\n        }\n\n    }\n\n    React.useEffect(() => {\n        console.log(\"MAIN USE EFFECT BEING CALLED\")\n        tokenRefreshWorkflow()\n    }, [])\n\n\n    const logOutUser = () => {\n        _storeData('accessToken', '');\n        _storeData('refreshToken', '');\n        _storeData('expirationTime', '');\n        _storeData('rcastUserInfo', '');\n        _storeData('rcastToken', '')\n        setRcastUserInfo({})\n        setAccessToken('')\n        setRefreshToken('')\n        setExpirationTime(0)\n        setRcastToken('')\n    }\n    return (\n        <NavigationContainer>\n\n            {accessToken && refreshToken && expirationTime && !loading &&\n\n\n                <UserNavigation\n                    logOutUser={logOutUser}\n                >\n                </UserNavigation>\n\n\n\n            }\n            {!accessToken && isExpired(expirationTime) && !loading &&\n                <GuestNavigation\n                    setAccessToken={setAccessToken}\n                    setRefreshToken={setRefreshToken}\n                    setExpirationTime={setExpirationTime}\n                    setRcastUserInfo={setRcastUserInfo}\n                    setRcastToken={setRcastToken}\n                    setLoading={setLoading}\n                    rcastUserInfo={rcastUserInfo}\n                >\n\n                </GuestNavigation>\n            }{loading &&\n                <View>\n                    <h1>Loading.....</h1>\n                </View>\n\n\n            }\n\n        </NavigationContainer>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}