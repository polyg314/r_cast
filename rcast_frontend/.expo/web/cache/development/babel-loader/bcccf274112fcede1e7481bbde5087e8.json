{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from '@rneui/themed';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\nexport default function LoginScreen() {\n  var _useAuthRequest = useAuthRequest({\n      clientId: '2032e93e5d6b4466a81a2fd6152cd0a6',\n      scopes: ['user-read-email', 'playlist-modify-public'],\n      usePKCE: false,\n      redirectUri: \"http://127.0.0.1:19006\"\n    }, discovery),\n    _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n    request = _useAuthRequest2[0],\n    response = _useAuthRequest2[1],\n    promptAsync = _useAuthRequest2[2];\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var code = response.params.code;\n      console.log(\"CODE\");\n      console.log(code);\n    }\n  }, [response]);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Button, {\n      title: \"Log In\",\n      onPress: function onPress() {\n        logInUser();\n      },\n      type: \"outline\"\n    })\n  });\n}","map":{"version":3,"names":["React","Button","WebBrowser","makeRedirectUri","useAuthRequest","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","LoginScreen","clientId","scopes","usePKCE","redirectUri","request","response","promptAsync","useEffect","type","code","params","console","log","flex","alignItems","justifyContent","logInUser"],"sources":["/Users/paulgaudin/Desktop/r_cast/rcast_frontend/src/screens/loginScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text } from \"react-native\";\n\nimport { Button } from '@rneui/themed';\n\n\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\n\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst discovery = {\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    tokenEndpoint: 'https://accounts.spotify.com/api/token',\n  };\n  \n\nexport default function LoginScreen() {\n\n    \n\nconst [request, response, promptAsync] = useAuthRequest(\n    {\n        clientId: '2032e93e5d6b4466a81a2fd6152cd0a6',\n        scopes: ['user-read-email', 'playlist-modify-public'],\n        // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n        // this must be set to false\n        usePKCE: false,\n        redirectUri: \"http://127.0.0.1:19006\"\n    },\n    discovery\n    );\n\n  React.useEffect(() => {\n    if (response?.type === 'success') {\n      const { code } = response.params;\n      console.log(\"CODE\")\n      console.log(code)\n    }\n  }, [response]);\n\n\n\n\n\n\n   return (\n<View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\n                <Button\n                title=\"Log In\"\n                onPress={() => {\n                    logInUser();\n                }}\n                type=\"outline\"\n                /> \n\n                \n</View>\n   );\n }"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAG/B,SAASC,MAAM,QAAQ,eAAe;AAGtC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,SAASC,eAAe,EAAEC,cAAc,QAAQ,mBAAmB;AAAC;AAGpEF,UAAU,CAACG,wBAAwB,EAAE;AAErC,IAAMC,SAAS,GAAG;EACdC,qBAAqB,EAAE,wCAAwC;EAC/DC,aAAa,EAAE;AACjB,CAAC;AAGH,eAAe,SAASC,WAAW,GAAG;EAItC,sBAAyCL,cAAc,CACnD;MACIM,QAAQ,EAAE,kCAAkC;MAC5CC,MAAM,EAAE,CAAC,iBAAiB,EAAE,wBAAwB,CAAC;MAGrDC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE;IACjB,CAAC,EACDP,SAAS,CACR;IAAA;IAVEQ,OAAO;IAAEC,QAAQ;IAAEC,WAAW;EAYnChB,KAAK,CAACiB,SAAS,CAAC,YAAM;IACpB,IAAI,CAAAF,QAAQ,oBAARA,QAAQ,CAAEG,IAAI,MAAK,SAAS,EAAE;MAChC,IAAQC,IAAI,GAAKJ,QAAQ,CAACK,MAAM,CAAxBD,IAAI;MACZE,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAOb,OACH,KAAC,IAAI;IAAC,KAAK,EAAE;MAAEQ,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA,UAEzD,KAAC,MAAM;MACP,KAAK,EAAC,QAAQ;MACd,OAAO,EAAE,mBAAM;QACXC,SAAS,EAAE;MACf,CAAE;MACF,IAAI,EAAC;IAAS;EACZ,EAGX;AAEN"},"metadata":{},"sourceType":"module"}