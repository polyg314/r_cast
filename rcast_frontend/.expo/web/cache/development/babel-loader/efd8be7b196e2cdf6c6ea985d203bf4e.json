{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from '@rneui/themed';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\nexport default function LoginScreen() {\n  var logInUser = function logInUser() {\n    getAuthorizationCode().then(function (code) {\n      console.log(\"CODE\");\n      console.log(code);\n    });\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Button, {\n      title: \"Log In\",\n      onPress: function onPress() {\n        logInUser();\n      },\n      type: \"outline\"\n    })\n  });\n}","map":{"version":3,"names":["React","Button","WebBrowser","makeRedirectUri","useAuthRequest","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","LoginScreen","logInUser","getAuthorizationCode","then","code","console","log","flex","alignItems","justifyContent"],"sources":["/Users/paulgaudin/Desktop/r_cast/rcast_frontend/src/screens/loginScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text } from \"react-native\";\n\nimport { Button } from '@rneui/themed';\n\n\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\n\n\nWebBrowser.maybeCompleteAuthSession();\n\nconst discovery = {\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    tokenEndpoint: 'https://accounts.spotify.com/api/token',\n  };\n  \n\nexport default function LoginScreen() {\n\n    \n\n// const [request, response, promptAsync] = useAuthRequest(\n//     {\n//         clientId: '2032e93e5d6b4466a81a2fd6152cd0a6',\n//         scopes: ['user-read-email', 'playlist-modify-public'],\n//         // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n//         // this must be set to false\n//         usePKCE: false,\n//         redirectUri: \"http://127.0.0.1:19006\"\n//     },\n//     discovery\n//     );\n\n//   React.useEffect(() => {\n//     if (response?.type === 'success') {\n//       const { code } = response.params;\n//       console.log(\"CODE\")\n//       console.log(code)\n//     }\n//   }, [response]);\n\nconst logInUser = () => {\n    getAuthorizationCode().then(code => {\n\n        console.log(\"CODE\")\n        console.log(code)\n    })\n}\n\n\n\n\n\n   return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n\n        <Button\n        title=\"Log In\"\n        onPress={() => {\n            logInUser();\n        }}\n        type=\"outline\"\n        /> \n\n                \n</View>\n   );\n }"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAG/B,SAASC,MAAM,QAAQ,eAAe;AAGtC,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,SAASC,eAAe,EAAEC,cAAc,QAAQ,mBAAmB;AAAC;AAGpEF,UAAU,CAACG,wBAAwB,EAAE;AAErC,IAAMC,SAAS,GAAG;EACdC,qBAAqB,EAAE,wCAAwC;EAC/DC,aAAa,EAAE;AACjB,CAAC;AAGH,eAAe,SAASC,WAAW,GAAG;EAwBtC,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;IACpBC,oBAAoB,EAAE,CAACC,IAAI,CAAC,UAAAC,IAAI,EAAI;MAEhCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAME,OACC,KAAC,IAAI;IAAC,KAAK,EAAE;MAAEG,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAA,UAErE,KAAC,MAAM;MACP,KAAK,EAAC,QAAQ;MACd,OAAO,EAAE,mBAAM;QACXR,SAAS,EAAE;MACf,CAAE;MACF,IAAI,EAAC;IAAS;EACZ,EAGH;AAEN"},"metadata":{},"sourceType":"module"}